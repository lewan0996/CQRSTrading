// <auto-generated />
using System;
using CQRSTrading.Auctions.Infrastructure;
using CQRSTrading.Auctions.Infrastructure.WriteModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CQRSTrading.Auctions.Infrastructure.Migrations
{
    [DbContext(typeof(AuctionsDbContext))]
    [Migration("20210130195408_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Auctions")
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CQRSTrading.Auctions.Domain.AuctionAggregate.Auction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("CQRSTrading.Auctions.Domain.AuctionAggregate.Auction", b =>
                {
                    b.OwnsOne("CQRSTrading.Auctions.Domain.AuctionAggregate.AuctionDescription", "Description", b1 =>
                        {
                            b1.Property<Guid>("AuctionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)")
                                .HasColumnName("Description");

                            b1.HasKey("AuctionId");

                            b1.ToTable("Auctions");

                            b1.WithOwner()
                                .HasForeignKey("AuctionId");
                        });

                    b.OwnsOne("CQRSTrading.Auctions.Domain.AuctionAggregate.AuctionName", "Name", b1 =>
                        {
                            b1.Property<Guid>("AuctionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(255)")
                                .HasColumnName("Name");

                            b1.HasKey("AuctionId");

                            b1.ToTable("Auctions");

                            b1.WithOwner()
                                .HasForeignKey("AuctionId");
                        });

                    b.OwnsOne("CQRSTrading.Auctions.Domain.AuctionAggregate.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("AuctionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<float>("Value")
                                .HasColumnType("real")
                                .HasColumnName("Price");

                            b1.HasKey("AuctionId");

                            b1.ToTable("Auctions");

                            b1.WithOwner()
                                .HasForeignKey("AuctionId");
                        });

                    b.Navigation("Description")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
